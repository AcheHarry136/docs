"use strict";(self.webpackChunkillusivesoulworks_docs=self.webpackChunkillusivesoulworks_docs||[]).push([[408],{5077:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var t=i(5893),d=i(1151);const o={sidebar_position:10},a="Example Datapack",s={id:"diet/datapack-example",title:"Example Datapack",description:"An example datapack for configuring various diet mechanics, including adding a new food group and adding food to that",source:"@site/docs/diet/datapack-example.md",sourceDirName:"diet",slug:"/diet/datapack-example",permalink:"/diet/datapack-example",draft:!1,unlisted:!1,editUrl:"https://github.com/illusivesoulworks/docs/edit/main/docs/diet/datapack-example.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Customizing Diet Suites",permalink:"/diet/diet-suites"},next:{title:"Vein Mining",permalink:"/category/vein-mining"}},r={},l=[{value:"Getting Started",id:"getting-started",level:2},{value:"New Food Group",id:"new-food-group",level:2},{value:"Adding the New Food Group to a Suite",id:"adding-the-new-food-group-to-a-suite",level:2},{value:"Adding an Item to a Food Group",id:"adding-an-item-to-a-food-group",level:2},{value:"Activating the Datapack",id:"activating-the-datapack",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,d.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"example-datapack",children:"Example Datapack"}),"\n",(0,t.jsx)(n.p,{children:"An example datapack for configuring various diet mechanics, including adding a new food group and adding food to that\nnew food group."}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsxs)(n.p,{children:["First, download the ",(0,t.jsx)(n.a,{target:"_blank",href:i(6955).Z+"",children:"example datapack"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Unzip the file and there will be the following folder structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"|data\n--|diet\n  --|tags\n    --|items\n      --|test_group.json\n--|diet_example\n  --|diet\n    --|groups\n      --|test_group.json\n    --|suites\n      --|builtin.json\n|pack.mcmeta\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:".mcmeta"})," file and ",(0,t.jsx)(n.code,{children:".json"})," files can be opened and edited in any text editor, such as Notepad."]}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:(0,t.jsxs)(n.strong,{children:["Why are there two folders for ",(0,t.jsx)(n.em,{children:"diet"})," and ",(0,t.jsx)(n.em,{children:"diet_example"}),"?"]})}),(0,t.jsxs)(n.p,{children:["The namespace used for this datapack is ",(0,t.jsx)(n.code,{children:"diet_example"}),". The ",(0,t.jsx)(n.code,{children:"diet_example"})," folder has a sub-folder called ",(0,t.jsx)(n.code,{children:"diet"})," which\nhouses the ",(0,t.jsx)(n.code,{children:"groups"})," and ",(0,t.jsx)(n.code,{children:"suites"})," folder. This is the custom data that is specifically for the Diet mod. On the other\nhand, the ",(0,t.jsx)(n.code,{children:"diet"})," folder that houses the ",(0,t.jsx)(n.code,{children:"tags"})," folder is using the name as a separate namespace for the purposes of\nadding item tags, which are read by vanilla."]})]}),"\n",(0,t.jsx)(n.h2,{id:"new-food-group",children:"New Food Group"}),"\n",(0,t.jsxs)(n.p,{children:["Adding a new food group is controlled by the ",(0,t.jsx)(n.code,{children:"data/diet_example/diet/groups/test_group.json"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "icon": "minecraft:diamond",\n  "color": "#ffffff",\n  "order": 5,\n  "default_value": 0.25,\n  "gain_multiplier": 2.0,\n  "decay_multiplier": 0.5,\n  "beneficial": true\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"The file and file name specifies these properties for the food group:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The identifier for the food group is ",(0,t.jsx)(n.code,{children:"test_group"}),", as denoted by the file name"]}),"\n",(0,t.jsxs)(n.li,{children:["The icon is the one for the ",(0,t.jsx)(n.code,{children:"minecraft:diamond"})," item"]}),"\n",(0,t.jsxs)(n.li,{children:["The color associated with the food group is ",(0,t.jsx)(n.code,{children:"#ffffff"}),", or white"]}),"\n",(0,t.jsxs)(n.li,{children:["The order is ",(0,t.jsx)(n.code,{children:"5"}),", denoting where it is placed on the Diet GUI"]}),"\n",(0,t.jsxs)(n.li,{children:["The default value is ",(0,t.jsx)(n.code,{children:"0.25"}),", or 25%"]}),"\n",(0,t.jsxs)(n.li,{children:["The gain multiplier is ",(0,t.jsx)(n.code,{children:"2.0"}),", doubling the percentages on all gains for the food group"]}),"\n",(0,t.jsxs)(n.li,{children:["The decay multiplier is ",(0,t.jsx)(n.code,{children:"0.5"}),", halving the rate of decay for the food group"]}),"\n",(0,t.jsxs)(n.li,{children:["The food group is ",(0,t.jsx)(n.code,{children:"beneficial"}),", which will render as green in tooltips"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For more information on the fields and customization of food groups, please refer to ",(0,t.jsx)(n.a,{href:"/diet/diet-groups",children:"the food groups page"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"adding-the-new-food-group-to-a-suite",children:"Adding the New Food Group to a Suite"}),"\n",(0,t.jsxs)(n.p,{children:["Just creating the food group isn't enough, as now it has to be added to a diet suite in order to appear anywhere. The\nmost relevant diet suite will be the default one, named ",(0,t.jsx)(n.code,{children:"builtin"}),", which is configured by the ",(0,t.jsx)(n.code,{children:"data/diet_example/diet/suites/builtin.json"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "replace": false,\n  "groups": [\n    "test_group"\n  ],\n  "effects": [\n    {\n      "status_effects": [\n        {\n          "name": "minecraft:regeneration",\n          "power": 3\n        }\n      ],\n      "conditions": [\n        {\n          "groups": ["test_group"],\n          "match": "all",\n          "above": 0.8,\n          "below": 1.0\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"The file and file name specifies these properties for the diet suite:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The identifier for the diet suite is ",(0,t.jsx)(n.code,{children:"builtin"}),", as denoted by the file name. This is the same identifier as the default\none, so this file's purpose is to edit or override any previously stated values."]}),"\n",(0,t.jsxs)(n.li,{children:["These values are adding, not replacing, its contents since ",(0,t.jsx)(n.code,{children:"replace"})," is ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["The groups to add are just ",(0,t.jsx)(n.code,{children:"test_group"})]}),"\n",(0,t.jsxs)(n.li,{children:["The effect added is a ",(0,t.jsx)(n.code,{children:"minecraft:regeneration"})," status effect when ",(0,t.jsx)(n.code,{children:"test_group"})," is above ",(0,t.jsx)(n.code,{children:"0.8"}),", or 80%"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For more information on the fields and customization of diet suites, please refer to ",(0,t.jsx)(n.a,{href:"/diet/diet-suites",children:"the diet suites page"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"adding-an-item-to-a-food-group",children:"Adding an Item to a Food Group"}),"\n",(0,t.jsxs)(n.p,{children:["Items are added to food groups by adding them to the relevant item tag. In the example datapack, the food group is ",(0,t.jsx)(n.code,{children:"test_group"}),"\nso an item tag for ",(0,t.jsx)(n.code,{children:"diet:test_group"})," is created at ",(0,t.jsx)(n.code,{children:"data/diet/tags/items/test_group.json"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "replace": false,\n  "values": [\n    "minecraft:apple"\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The file name is the same as the identifier for the food group and will be the name of the tag that is created. By\nsetting ",(0,t.jsx)(n.code,{children:"replace"})," to ",(0,t.jsx)(n.code,{children:"false"}),", the values are added to the tag instead of replacing them. Listing ",(0,t.jsx)(n.code,{children:"minecraft:apple"})," in\nthe ",(0,t.jsx)(n.code,{children:"values"})," array will add the apple item to the tag and consequently to the ",(0,t.jsx)(n.code,{children:"test_group"})," food group."]}),"\n",(0,t.jsxs)(n.p,{children:["For more information on tags and item tags, please refer to the ",(0,t.jsx)(n.a,{href:"https://minecraft.wiki/w/Tag",children:"page on the Minecraft wiki"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"activating-the-datapack",children:"Activating the Datapack"}),"\n",(0,t.jsxs)(n.p,{children:["Datapacks are created on a per-world basis and need to be placed in the ",(0,t.jsx)(n.code,{children:"datapacks"})," folder of the ",(0,t.jsx)(n.code,{children:"world"})," folder on a\ndedicated server or the ",(0,t.jsx)(n.code,{children:"saves/(World Name)"})," folder in single player. They should automatically be enabled upon loading\nthe datapack for the first time in the world."]})]})}function h(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},6955:(e,n,i)=>{i.d(n,{Z:()=>t});const t=i.p+"assets/files/diet_example-d150912a73450e80c0d2527087199ec4.zip"},1151:(e,n,i)=>{i.d(n,{Z:()=>s,a:()=>a});var t=i(7294);const d={},o=t.createContext(d);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkillusivesoulworks_docs=self.webpackChunkillusivesoulworks_docs||[]).push([[143],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,y=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(y,o(o({ref:t},c),{},{components:n})):r.createElement(y,o({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},713:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:2},o="Add a Slot Type to an Entity",l={unversionedId:"curios/entity-register",id:"curios/entity-register",title:"Add a Slot Type to an Entity",description:"A tutorial on how to add a registered slot type to an entity.",source:"@site/docs/curios/entity-register.md",sourceDirName:"curios",slug:"/curios/entity-register",permalink:"/curios/entity-register",draft:!1,editUrl:"https://github.com/illusivesoulworks/docs/edit/main/docs/curios/entity-register.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Register a Slot Type",permalink:"/curios/slot-register"},next:{title:"Preset Slot Types",permalink:"/curios/preset-slots"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Directory",id:"directory",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"add-a-slot-type-to-an-entity"},"Add a Slot Type to an Entity"),(0,a.kt)("p",null,"A tutorial on how to add a registered slot type to an entity."),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Beginning in 1.20, the recommended way to add a registered slot type to an entity is through a datapack. If you are\nunfamiliar with datapacks, it is recommended to read through the ",(0,a.kt)("a",{parentName:"p",href:"https://minecraft.fandom.com/wiki/Data_pack"},"wiki page"),"\nin order to understand the concept and structure before proceeding to the rest of this page."),(0,a.kt)("h2",{id:"directory"},"Directory"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"The file should be a ",(0,a.kt)("inlineCode",{parentName:"p"},".json")," file located in the ",(0,a.kt)("inlineCode",{parentName:"p"},"~/data/(namespace)/curios/entities/")," folder of the datapack."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The file can be named anything."),(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"(namespace)")," field should be replaced by the namespace chosen for this portion of the datapack. If this is a part\nof a mod, the namespace is usually the mod ID. If this is part of a user-defined datapack, then the namespace can be\nanything that is lowercased with no special characters.")),(0,a.kt)("h2",{id:"syntax"},"Syntax"),(0,a.kt)("hr",null),(0,a.kt)("p",null,"The structure of the ",(0,a.kt)("inlineCode",{parentName:"p"},".json")," file for the entity configuration consists of a top-level JSON object that holds two\npotential fields."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"entities"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"An array of registry names of entity types or entity type tags."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"slots"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"An array of ",(0,a.kt)("inlineCode",{parentName:"li"},"identifier")," names for registered slot types.")))),(0,a.kt)("p",null,"All of the listed slots will be associated to all of the listed entities."),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("hr",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "entities": ["player", "minecraft:zombie"],\n  "slots": ["head", "back"]\n}\n')),(0,a.kt)("p",null,"This configuration will give two slot types, ",(0,a.kt)("inlineCode",{parentName:"p"},"head")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"back"),", to all players and all zombies."))}u.isMDXComponent=!0}}]);
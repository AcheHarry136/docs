"use strict";(self.webpackChunkillusivesoulworks_docs=self.webpackChunkillusivesoulworks_docs||[]).push([[969],{8329:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>a,frontMatter:()=>d,metadata:()=>o,toc:()=>c});var i=s(5893),n=s(1151);const d={sidebar_position:1},r="Registering and Editing Slot Types",o={id:"curios/slot-register",title:"Registering and Editing Slot Types",description:"A tutorial on how to register and modify slot types that are recognized by Curios.",source:"@site/docs/curios/slot-register.md",sourceDirName:"curios",slug:"/curios/slot-register",permalink:"/curios/slot-register",draft:!1,unlisted:!1,editUrl:"https://github.com/illusivesoulworks/docs/edit/main/docs/curios/slot-register.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Curios",permalink:"/category/curios"},next:{title:"Adding Slot Types to Entities",permalink:"/curios/entity-register"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Directory",id:"directory",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Example",id:"example",level:2},{value:"Modifying a Slot Type",id:"modifying-a-slot-type",level:2},{value:"Example",id:"example-1",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"registering-and-editing-slot-types",children:"Registering and Editing Slot Types"}),"\n",(0,i.jsx)(t.p,{children:"A tutorial on how to register and modify slot types that are recognized by Curios."}),"\n",(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.p,{children:["Beginning in 1.20, the recommended way to register a slot type is through a datapack. If you are unfamiliar with\ndatapacks, it is recommended to read through the ",(0,i.jsx)(t.a,{href:"https://minecraft.fandom.com/wiki/Data_pack",children:"wiki page"})," in order to\nunderstand the concept and structure before proceeding to the rest of this page."]}),"\n",(0,i.jsxs)(t.p,{children:["If using one of the ",(0,i.jsx)(t.a,{href:"./preset-slots",children:"Preset Slot Types"}),", this step can be skipped since Curios natively provides the\nneeded datapack registration."]}),"\n",(0,i.jsxs)(t.admonition,{type:"info",children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Why are my registered slot types not appearing?"})}),(0,i.jsxs)(t.p,{children:["Registering slot types makes them available for use; however, they are ",(0,i.jsx)(t.em,{children:"not"})," added to any entities (including players)\nby default. In order to add them to an entity, please refer to ",(0,i.jsx)(t.a,{href:"/curios/entity-register",children:"the next step"})," on adding slot\ntypes to entities."]})]}),"\n",(0,i.jsx)(t.h2,{id:"directory",children:"Directory"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.p,{children:["The file should be a ",(0,i.jsx)(t.code,{children:".json"})," file with the ",(0,i.jsx)(t.code,{children:"identifier"})," for the slot type to be registered as the name. This file\nshould be located in the ",(0,i.jsx)(t.code,{children:"~/data/(namespace)/curios/slots/"})," folder of the datapack."]}),"\n",(0,i.jsxs)(t.p,{children:["Example: Registering a ",(0,i.jsx)(t.code,{children:"head"})," slot type requires creating a ",(0,i.jsx)(t.code,{children:"head.json"})," file located in ",(0,i.jsx)(t.code,{children:"~/data/(namespace)/curios/slots/"}),"\nso the final path should look like ",(0,i.jsx)(t.code,{children:"~/data/(namespace)/curios/slots/head.json"}),"."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"(namespace)"})," field should be replaced by the namespace chosen for this portion of the datapack. If this is a part\nof a mod, the namespace is usually the mod ID. If this is part of a user-defined datapack, then the namespace can be\nanything that is lowercased with no special characters."]})}),"\n",(0,i.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.p,{children:["The structure of the ",(0,i.jsx)(t.code,{children:".json"})," file for the slot type consists of a top-level JSON object that holds various fields\nrelated to that slot type."]}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Required"}),(0,i.jsx)(t.th,{children:"Description"}),(0,i.jsx)(t.th,{children:"Merge Behavior"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"replace"})}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"false"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"false"})}),(0,i.jsxs)(t.td,{children:["When ",(0,i.jsx)(t.code,{children:"true"}),", replaces data from lower-priority datapacks"]}),(0,i.jsx)(t.td,{children:"N/A"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"size"})}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"1"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"false"})}),(0,i.jsx)(t.td,{children:"The number of slots of this slot type to give by default"}),(0,i.jsx)(t.td,{children:"The highest size will be used"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"operation"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:'"SET"'}),"|",(0,i.jsx)(t.code,{children:'"ADD"'}),"|",(0,i.jsx)(t.code,{children:'"REMOVE"'})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:'"SET"'})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"false"})}),(0,i.jsxs)(t.td,{children:["Whether to use ",(0,i.jsx)(t.code,{children:"size"})," to set, add, or remove from the total number of slots"]}),(0,i.jsx)(t.td,{children:"N/A"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"order"})}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"1000"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"false"})}),(0,i.jsx)(t.td,{children:"The order the slots will appear in the native Curios GUI, lower numbers appear higher"}),(0,i.jsx)(t.td,{children:"The lowest order will be used"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"icon"})}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"curios:slot/empty_curios_slot"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"false"})}),(0,i.jsx)(t.td,{children:"The location of the icon to use for the slot type"}),(0,i.jsx)(t.td,{children:"The last icon will be used"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"add_cosmetic"})}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"false"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"false"})}),(0,i.jsxs)(t.td,{children:["When ",(0,i.jsx)(t.code,{children:"true"}),", adds a cosmetic slot next to the original that does not provide function but still renders its contents"]}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"true"})," if any add a cosmetic slot"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"use_native_gui"})}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"true"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"false"})}),(0,i.jsxs)(t.td,{children:["When ",(0,i.jsx)(t.code,{children:"false"}),", does not add the slot type to the native Curios GUI"]}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"false"})," if any do not use the native GUI"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"render_toggle"})}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"true"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"false"})}),(0,i.jsxs)(t.td,{children:["When ",(0,i.jsx)(t.code,{children:"false"}),", does not allow the slot type to toggle its rendering"]}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:"false"})," if any do not allow render toggling"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"drop_rule"})}),(0,i.jsxs)(t.td,{children:[(0,i.jsx)(t.code,{children:'"DEFAULT"'}),"|",(0,i.jsx)(t.code,{children:'"ALWAYS_DROP"'}),"|",(0,i.jsx)(t.code,{children:'"ALWAYS_KEEP"'}),"|",(0,i.jsx)(t.code,{children:'"DESTROY"'})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:'"DEFAULT"'})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"false"})}),(0,i.jsxs)(t.td,{children:["Whether to drop, keep, destroy, or follow the ",(0,i.jsx)(t.code,{children:"keepCurios"})," configuration"]}),(0,i.jsx)(t.td,{children:"N/A"})]})]})]}),"\n",(0,i.jsxs)(t.admonition,{type:"info",children:[(0,i.jsx)(t.p,{children:(0,i.jsxs)(t.strong,{children:["Which ",(0,i.jsx)(t.code,{children:"operation"})," value should I use?"]})}),(0,i.jsxs)(t.p,{children:["In most cases, ",(0,i.jsx)(t.code,{children:'"SET"'})," (also the default if no value is defined) will accomplish the desired result. It denotes that a\nslot type should have a certain amount of slots by default, with the highest value among all consumers being used.\n",(0,i.jsx)(t.code,{children:'"ADD"'}),"and ",(0,i.jsx)(t.code,{children:'"REMOVE"'})," are inherent slot modifiers and are based on the amount of slots specified by all ",(0,i.jsx)(t.code,{children:'"SET"'}),"\noperations, the result of which can change based on the mods/datapacks loaded."]})]}),"\n",(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "order": 20,\n  "size": 4,\n  "icon": "curios:slot/empty_custom_slot",\n  "add_cosmetic": true\n}\n'})}),"\n",(0,i.jsxs)(t.p,{children:["This slot type will have a relatively low order of 20, which will make it appear higher than most slots. It also has\nsize of 4 which means that it will register 4 slots to any given entity by default. For the GUI, it uses an icon\nlocated at ",(0,i.jsx)(t.code,{children:"curios:slot/empty_custom_slot"}),". It also has added a cosmetic slot so there will be an additional slot for\ncosmetic items next to it in the Curios GUI."]}),"\n",(0,i.jsx)(t.h2,{id:"modifying-a-slot-type",children:"Modifying a Slot Type"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.p,{children:["The process of modifying a slot type is identical to registering a new slot type, except using the same ",(0,i.jsx)(t.code,{children:"identifier"})," as\nthe existing slot type. All slot types that share an ",(0,i.jsx)(t.code,{children:"identifier"})," will be merged according to the ",(0,i.jsx)(t.strong,{children:"Merge Behavior"})," of\neach field as outlined above."]}),"\n",(0,i.jsx)(t.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsxs)(t.p,{children:["Curios natively provides data for the ",(0,i.jsx)(t.code,{children:"ring"})," slot, which defaults the size to 1. In order to increase the size to 2,\ncreate a ",(0,i.jsx)(t.code,{children:"ring.json"})," slot registration file in the datapack with the contents:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "size": 2\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"This will merge the size data of this registration with the existing registration provided by Curios, keeping all of the\nother data intact while increasing the number of slots to 2."})]})}function a(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>o,a:()=>r});var i=s(7294);const n={},d=i.createContext(n);function r(e){const t=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(d.Provider,{value:t},e.children)}}}]);